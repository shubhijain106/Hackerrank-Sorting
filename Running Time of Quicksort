import java.util.*;
public class Solution {
    static int sum=0;
    static int po=0;
 
    public static int insertionSort(int[] A){
        
        for(int i = 1; i < A.length; i++){
            int value = A[i];
            int j = i - 1;
            while(j >= 0 && A[j] > value){
                A[j + 1] = A[j];
                j = j - 1;
                po++;
            }
            A[j + 1] = value;
        }
return po;
    }
 public static int quickSort(int[] a, int p, int r)
    {
        if(p<r)
        {
            int q=partition(a,p,r);
     
          //printArray(a);
            quickSort(a,p,q-1); 
            quickSort(a,q+1,r);
          
            
        }
        return sum;
    }

    private static int partition(int[] a, int p, int r) {

        int x = a[r];
        int i = p;
        int j=p;
       int count=0;
        while (true) {
        
            
            if(i<r && a[i]<x)
            {while ( i< r && a[i] < x)
            {swap(a,i,j);
             count++;//System.out.println("a[i]"+a[i]);
              i++;
              j++;
              }}
            else
            {
            while (j<r && a[j] > x)
            { 
            j++;}

            if (i<j && a[j]!=x && a[i]!=x)
            {swap(a, i, j);
            count++;
            i++;j++;}
            else
            {//System.out.println("a[j]"+a[i]);
             swap(a,r,i);
             count++;
             //System.out.println("c"+count);
             sum=sum+count;
            //printArray(a);
            return i;
            }
          // printArray(a);
        }
    }
    
    }

    private static void swap(int[] a, int i, int j) {
        // TODO Auto-generated method stub
        int temp = a[i];
        a[i] = a[j];
        a[j] = temp;
    }
  
 
 static void printArray(int[] ar) {
         for(int n: ar){
            System.out.print(n+" ");
         }
           System.out.println("");
      }
       
      public static void main(String[] args) {
           Scanner in = new Scanner(System.in);
           int n = in.nextInt();
           int[] ar = new int[n];
           int[] ar1 = new int[n];
           for(int i=0;i<n;i++){
              ar[i]=in.nextInt(); 
              ar1[i]=ar[i];
           }
          int po= insertionSort(ar);
          int sum= quickSort(ar1,0,ar1.length-1);
           System.out.println((po-sum));
       }    
   }



